"""–ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ ip-–∞–¥—Ä–µ—Å–µ"""

import os
import logging
from typing import List  # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏

import requests
import telebot
from telebot import types  # –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏

from bot_func_abc import AtomicBotFunctionABC  # –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏


class IPLookupBotFunction(AtomicBotFunctionABC):
    """–ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ IP –∞–¥—Ä–µ—Å–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API ipstack."""

    commands: List[str] = ["iplookup"]
    authors: List[str] = ["Icestorm-dev"]
    about: str = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± IP-–∞–¥—Ä–µ—Å–µ."
    description: str = """–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± IP-–∞–¥—Ä–µ—Å–∞—Ö —á–µ—Ä–µ–∑ API ipstack.
    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /iplookup <IP-–∞–¥—Ä–µ—Å>, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ."""
    state: bool = True

    bot: telebot.TeleBot

    def set_handlers(self, bot: telebot.TeleBot):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –±–æ—Ç–∞."""
        self.bot = bot

        @bot.message_handler(commands=self.commands)
        def ip_lookup_handler(message: types.Message):
            args = message.text.split()
            if len(args) != 2:
                bot.send_message(
                    message.chat.id,
                    "\u274C –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ IP-–∞–¥—Ä–µ—Å. –ü—Ä–∏–º–µ—Ä: /iplookup 134.201.250.155"
                )
                return

            ip_address = args[1]
            self.__fetch_ip_data(message, ip_address)

    def __fetch_ip_data(self, message: types.Message, ip_address: str):
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± IP-–∞–¥—Ä–µ—Å–µ."""
        api_key = os.getenv("IPSTACK_API_KEY")
        if not api_key:
            self.bot.send_message(
                message.chat.id,
                "\u274C API-–∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω."
            )
            return

        url = f"http://api.ipstack.com/{ip_address}?access_key={api_key}"

        try:
            response = requests.get(url, timeout=10)
            response.raise_for_status()
            data = response.json()

            if "error" in data:
                self.bot.send_message(
                    message.chat.id,
                    f"\u274C –û—à–∏–±–∫–∞: {data['error'].get('info', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"
                )
                return

            # Format and send data
            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            languages = [
                lang.get('native', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                for lang in data.get('location', {}).get('languages', [])
            ]
            info = (
                f"\U0001F4E7 –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± IP-–∞–¥—Ä–µ—Å–µ {ip_address}:\n"
                f"üåê –¢–∏–ø IP: {data.get('type', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
                f"üè≥Ô∏è –°—Ç—Ä–∞–Ω–∞: {data.get('country_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} "
                f"({data.get('country_code', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')})\n"
                f"üìç –†–µ–≥–∏–æ–Ω: {data.get('region_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} "
                f"({data.get('region_code', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')})\n"
                f"üèôÔ∏è –ì–æ—Ä–æ–¥: {data.get('city', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
                f"üìÆ –ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å: {data.get('zip', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
                f"üåé –ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç: {data.get('continent_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} "
                f"({data.get('continent_code', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')})\n"
                f"üó∫Ô∏è –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {data.get('latitude', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}¬∞ N, "
                f"{data.get('longitude', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}¬∞ E\n"
                f"üìû –ö–æ–¥ —Å—Ç—Ä–∞–Ω—ã: +{data.get('location', {}).get('calling_code', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
                f"üó£Ô∏è –Ø–∑—ã–∫–∏: {', '.join(languages)}\n"
            )

            self.bot.send_message(message.chat.id, info)
        except requests.exceptions.RequestException as e:
            logging.exception(e)
            self.bot.send_message(
                message.chat.id,
                "\u274C –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º."
            )
